// <auto-generated />
using System;
using EviHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EviHub.Migrations
{
    [DbContext(typeof(EviHubDbContext))]
    partial class EviHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeSkills", b =>
                {
                    b.Property<int>("EmployeesEmpId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsSkillId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesEmpId", "SkillsSkillId");

                    b.HasIndex("SkillsSkillId");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("EmployeeUserRole", b =>
                {
                    b.Property<int>("EmployeesEmpId")
                        .HasColumnType("int");

                    b.Property<int>("UserRolesUserRoleId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesEmpId", "UserRolesUserRoleId");

                    b.HasIndex("UserRolesUserRoleId");

                    b.ToTable("EmployeeUserRole");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.CertificationCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId");

                    b.ToTable("CertificationCategories");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.CertificationProgress", b =>
                {
                    b.Property<int>("CertificationProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificationProgressId"));

                    b.Property<int>("CertificationId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CertificationProgressId");

                    b.HasIndex("CertificationId");

                    b.HasIndex("EmployeeEmpId");

                    b.ToTable("CertificationProgresses");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<int?>("CertificationId")
                        .HasColumnType("int");

                    b.Property<int>("CertificationProgressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Interests")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProposalWorkId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmpId");

                    b.HasIndex("CertificationId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeEmpId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.EmployeeCertification", b =>
                {
                    b.Property<int>("EmpCertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpCertId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CertificationId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.HasKey("EmpCertId");

                    b.HasIndex("CertificationId");

                    b.HasIndex("EmployeeEmpId");

                    b.ToTable("EmployeeCertifications");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.EmployeeProject", b =>
                {
                    b.Property<int>("EmpProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpProjectId"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("EmpProjectId");

                    b.HasIndex("EmployeeEmpId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjects");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.Login", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("EmployeeEmpId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Certification", b =>
                {
                    b.Property<int>("CertificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificationId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CertificationCategoryCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CertificationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CertificationId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CertificationCategoryCategoryId");

                    b.ToTable("Certification");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignationId"));

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DesignationId");

                    b.HasIndex("DesignationName")
                        .IsUnique();

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ProjectName")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Skills", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"));

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SkillId");

                    b.HasIndex("SkillName")
                        .IsUnique();

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.ProjectProgress", b =>
                {
                    b.Property<int>("EmpProjectProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpProjectProgressId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpProjectProgressId");

                    b.HasIndex("EmployeeEmpId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectProgresses");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.Proposal", b =>
                {
                    b.Property<int>("ProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProposalId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("ProposalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProposalDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ProposalName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ProposalId");

                    b.HasIndex("EmpId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.ProposalWork", b =>
                {
                    b.Property<int>("ProposalWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProposalWorkId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ProposalId")
                        .HasColumnType("int");

                    b.Property<int>("ProposalId1")
                        .HasColumnType("int");

                    b.HasKey("ProposalWorkId");

                    b.HasIndex("EmpId");

                    b.HasIndex("EmployeeEmpId");

                    b.HasIndex("ProposalId");

                    b.HasIndex("ProposalId1");

                    b.ToTable("ProposalWorks");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("EmployeeSkills", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Skills", null)
                        .WithMany()
                        .HasForeignKey("SkillsSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeUserRole", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.UserRole", null)
                        .WithMany()
                        .HasForeignKey("UserRolesUserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.CertificationProgress", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Certification", "Certification")
                        .WithMany("CertificationProgresses")
                        .HasForeignKey("CertificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", "Employee")
                        .WithMany("CertificationProgresses")
                        .HasForeignKey("EmployeeEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certification");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.Employee", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Certification", null)
                        .WithMany("Employees")
                        .HasForeignKey("CertificationId");

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", null)
                        .WithMany("EmployeesUnderManager")
                        .HasForeignKey("EmployeeEmpId");

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Gender", "Gender")
                        .WithMany("Employees")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Manager", "Manager")
                        .WithMany("EmployeesUnderManager")
                        .HasForeignKey("ManagerId");

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Project", "Project")
                        .WithMany("Employees")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Designation");

                    b.Navigation("Gender");

                    b.Navigation("Manager");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.EmployeeCertification", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Certification", "Certifications")
                        .WithMany("EmployeeCertifications")
                        .HasForeignKey("CertificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", "Employee")
                        .WithMany("EmployeeCertifications")
                        .HasForeignKey("EmployeeEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certifications");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.EmployeeProject", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("EmployeeEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.Login", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", null)
                        .WithOne("Login")
                        .HasForeignKey("EviHub.EviHub.Core.Entities.Login", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Certification", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.CertificationCategory", null)
                        .WithMany("Certifications")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.CertificationCategory", "CertificationCategory")
                        .WithMany()
                        .HasForeignKey("CertificationCategoryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CertificationCategory");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.ProjectProgress", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", "Employee")
                        .WithMany("ProjectProgresses")
                        .HasForeignKey("EmployeeEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Project", "Project")
                        .WithMany("ProjectProgresses")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.Proposal", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", "Employee")
                        .WithMany("Proposals")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.ProposalWork", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.Employee", null)
                        .WithMany("ProposalWorks")
                        .HasForeignKey("EmployeeEmpId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.Proposal", null)
                        .WithMany("ProposalWorks")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.Proposal", "Proposal")
                        .WithMany()
                        .HasForeignKey("ProposalId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.CertificationCategory", b =>
                {
                    b.Navigation("Certifications");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.Employee", b =>
                {
                    b.Navigation("CertificationProgresses");

                    b.Navigation("EmployeeCertifications");

                    b.Navigation("EmployeeProjects");

                    b.Navigation("EmployeesUnderManager");

                    b.Navigation("Login")
                        .IsRequired();

                    b.Navigation("ProjectProgresses");

                    b.Navigation("ProposalWorks");

                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Certification", b =>
                {
                    b.Navigation("CertificationProgresses");

                    b.Navigation("EmployeeCertifications");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Designation", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Gender", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Manager", b =>
                {
                    b.Navigation("EmployeesUnderManager");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Project", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("ProjectProgresses");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.Proposal", b =>
                {
                    b.Navigation("ProposalWorks");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using EviHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EviHub2.Migrations
{
    [DbContext(typeof(EviHubDbContext))]
    partial class EviHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EviHub2.Models.Entities.Certification", b =>
                {
                    b.Property<int>("CertificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificationId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CertificationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CertificationId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.CertificationCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("CertificationCategories");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Certificationprogress", b =>
                {
                    b.Property<int>("CertificationProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificationProgressId"));

                    b.Property<int>("CertificationId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CertificationProgressId");

                    b.HasIndex("CertificationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Certificationprogress");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Interests")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("EmpId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmpId = 1001,
                            DOB = new DateTime(1995, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DesignationId = 1,
                            Email = "alice.johnson@evihub.com",
                            EmergencyContact = "9876543210",
                            FirstName = "Alice",
                            GenderId = "F",
                            Id = 1,
                            Interests = "AI, Reading",
                            IsAdmin = true,
                            LastName = "Johnson",
                            Mobile = "9876543210",
                            ProjectId = 1
                        },
                        new
                        {
                            EmpId = 1002,
                            DOB = new DateTime(1992, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DesignationId = 2,
                            Email = "bob.smith@evihub.com",
                            EmergencyContact = "8765432109",
                            FirstName = "Bob",
                            GenderId = "M",
                            Id = 2,
                            Interests = "ML, Cricket",
                            IsAdmin = false,
                            LastName = "Smith",
                            ManagerId = 1,
                            Mobile = "8765432109",
                            ProjectId = 2
                        });
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Proposal", b =>
                {
                    b.Property<int>("ProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProposalId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ProposalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProposalDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProposalId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.ProposalWork", b =>
                {
                    b.Property<int>("ProposalWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProposalWorkId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProposalId")
                        .HasColumnType("int");

                    b.HasKey("ProposalWorkId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProposalId");

                    b.ToTable("ProposalWorks");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Certification", b =>
                {
                    b.HasOne("EviHub2.Models.Entities.CertificationCategory", "CertificationCategory")
                        .WithMany("Certifications")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CertificationCategory");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Certificationprogress", b =>
                {
                    b.HasOne("EviHub2.Models.Entities.Certification", "Certification")
                        .WithMany("Certificationprogress")
                        .HasForeignKey("CertificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub2.Models.Entities.Employee", "Employee")
                        .WithMany("Certificationprogress")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certification");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Proposal", b =>
                {
                    b.HasOne("EviHub2.Models.Entities.Employee", "Employee")
                        .WithMany("Proposals")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.ProposalWork", b =>
                {
                    b.HasOne("EviHub2.Models.Entities.Employee", "Employee")
                        .WithMany("ProposalWorks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub2.Models.Entities.Proposal", "Proposal")
                        .WithMany("ProposalWorks")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Certification", b =>
                {
                    b.Navigation("Certificationprogress");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.CertificationCategory", b =>
                {
                    b.Navigation("Certifications");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Employee", b =>
                {
                    b.Navigation("Certificationprogress");

                    b.Navigation("ProposalWorks");

                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("EviHub2.Models.Entities.Proposal", b =>
                {
                    b.Navigation("ProposalWorks");
                });
#pragma warning restore 612, 618
        }
    }
}
